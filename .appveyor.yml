# Use a simple incremented version number.
version: '{build}'

# Download the repository as a zip archive.
# https://www.appveyor.com/docs/how-to/repository-shallow-clone/
shallow_clone: true

environment:
  matrix:

    # This is not an exhaustive list, just a representative sample.

    - CHANNEL: stable
      ARCH: i686

    - CHANNEL: stable
      ARCH: x86_64
      CONFIG_TOOLCHAIN: 1

    - CHANNEL: stable
      ARCH: i686
      CONFIG_MINGW: 1

    - CHANNEL: nightly
      ARCH: x86_64

    - CHANNEL: nightly
      ARCH: i686
      CONFIG_TOOLCHAIN: 1

    - CHANNEL: nightly
      ARCH: x86_64
      CONFIG_MINGW: 1

install:
  # Install Rust
  - appveyor-retry appveyor downloadfile https://win.rustup.rs/ -filename rustup-init.exe -timeout 60000
  - rustup-init --version
  - rustup-init -y --default-toolchain %CHANNEL%-%ARCH%-pc-windows-gnu
  - set PATH=%USERPROFILE%\.cargo\bin;%PATH%
  - rustc --version
  - cargo --version

  # Set path for toolchain
  - if %ARCH%==i686   set PATH=C:\msys64\mingw32\bin;%PATH%
  - if %ARCH%==x86_64 set PATH=C:\msys64\mingw64\bin;%PATH%
  - where gcc
  - where pkg-config

  # Create the `pacman` package cache directory to avoid a warning.
  #
  # Sources:
  # - https://bbs.archlinux.org/viewtopic.php?id=9
  # - https://github.com/open62541/open62541/issues/2068
  - C:\msys64\usr\bin\mkdir -p /var/cache/pacman/pkg

  # Install `graphite2`
  - appveyor-retry C:\msys64\usr\bin\pacman --sync --sysupgrade --needed --noconfirm "mingw-w64-%ARCH%-graphite2"
  - C:\msys64\usr\bin\pacman --query --info "mingw-w64-%ARCH%-graphite2"
  - pkg-config --libs --cflags graphite2

  # Create destination directory for `config`.
  - mkdir .cargo

# We do everything in the test_script phase, so we disable the build phase to
# avoid AppVeyor trying to build something and failing.
build: false

test_script:
  - if defined CONFIG_TOOLCHAIN copy config-toolchain .cargo\config
  - if defined CONFIG_MINGW     copy config-mingw     .cargo\config
  - cargo build -vv
